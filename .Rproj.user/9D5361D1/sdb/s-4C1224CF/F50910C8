{
    "collab_server" : "",
    "contents" : "#0.755814 com altura nfolds = 100,\n#0.7093023 com altura\n#0.6976744 sem altura\nlibrary(h2o)\nlibrary(ggplot2)\nlibrary(sqldf)\nlibrary(plyr)\n\nDL<-function(h2o, treino.hex, validacao.hex, teste.hex, x, y)\n{\n  \n\n\nhyper_parametersDP <- list(\n  hidden=list(c(32,32,32),c(64,64), c(128,128)),\n  input_dropout_ratio=c(0,0.05),\n  rate=c(0.01,0.02),\n  rate_annealing=c(1e-8,1e-7,1e-6)\n)\n\ngridDL <- h2o.grid(\"deeplearning\", \n                   grid_id=\"dl_grid_test\", \n                   x=x, \n                   y=y, \n                   training_frame=treino.hex, \n                   validation_frame=validacao.hex, \n                   epochs=20,\n                   seed = 1234,\n                   #stopping_metric=\"misclassification\",\n                   #stopping_tolerance=1e-2,        ## stop when misclassification does not improve by >=1% for 2 scoring events\n                   #stopping_rounds=2,\n                   #score_validation_samples=10000, ## downsample validation set for faster scoring\n                   #score_duty_cycle=0.025,         ## don't score more than 2.5% of the wall time\n                   #adaptive_rate=F,                ## manually tuned learning rate\n                   #momentum_start=0.5,             ## manually tuned momentum\n                   #momentum_stable=0.9, \n                   #momentum_ramp=1e7, \n                   #l1=1e-5,\n                   #l2=1e-5,\n                   #activation=c(\"Rectifier\"),\n                   #max_w2=10,\n                   nfolds = 100,\n                   variable_importances=T\n                   ,hyper_params = hyper_parametersDP\n                   )\n\ndl_sorted_grid <- h2o.getGrid(grid_id = \"dl_grid_test\", sort_by = \"accuracy\", decreasing = FALSE)\n\nprint(dl_sorted_grid, exact_quantiles=TRUE)\n\n\n# Grab the model_id based in AUC\nbest_dl_model_id <- gridDL@model_ids[[1]]\n\n# The best model\nbest_dl <- h2o.getModel(best_dl_model_id)\n\nprint(best_dl@allparameters)\nprint(h2o.performance(best_dl, valid=T))\n\n\n\nmy_varimpDL <- h2o.varimp(best_dl)\nbarplot(my_varimpDL$scaled_importance,\n        names.arg = my_varimpDL$variable,\n        space = 1,\n        las = 2,\n        main = \"Variable Importance: DL GRID\")\n\nmodel = best_dl\n\n# Summary of the best model\npred2 = h2o.predict(object = model, newdata = teste.hex)\n\ndataset_pred <- as.data.frame(pred2)\n\n\nsub_reg <- data.frame(id_jogador = teste$id_jogador,  id_partida = teste$id_partida, temporada = teste$nome_temporada, posicao =  dataset_pred$predict)\n\n\nfinal <- cbind(dataset_pred, teste ) \nerro =  sqldf( \"select * from final where predict != posicao\")\n\nperf <- h2o.performance(model, teste.hex)\nh2o.confusionMatrix(perf)\nreturn (mean(pred2$predict==teste.hex$posicao))\n\n}",
    "created" : 1498504989123.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3427583553",
    "id" : "F50910C8",
    "lastKnownWriteTime" : 1498840665,
    "last_content_update" : 1498840665997,
    "path" : "~/Downloads/MDM/MDM Predict 5p/scripts/gridDL.R",
    "project_path" : "scripts/gridDL.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}